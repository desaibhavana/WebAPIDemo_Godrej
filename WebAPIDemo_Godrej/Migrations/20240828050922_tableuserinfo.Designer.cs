// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPIDemo_Godrej.Models;

#nullable disable

namespace WebAPIDemo_Godrej.Migrations
{
    [DbContext(typeof(WebAPIDBGodrejContext))]
    [Migration("20240828050922_tableuserinfo")]
    partial class tableuserinfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPIDemo_Godrej.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("numeric(5)");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WebAPIDemo_Godrej.Models.UserInfo", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Username");

                    b.ToTable("UserInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
